#include <iostream>
using namespace std;
struct node{
    int data;
    node * left;
    node * right;
    node(int val){
        data = val;
        left = right = nullptr;
    }
};
void inorder(node*root){
    if(root){
        inorder(root->left);
        cout<<root->data<<" ";
        inorder(root->right);
    }
}
node*insert(node*root,int key){
    if(root==nullptr){
        return new node(key);
    }

else if(key<root->data){
    root->left=insert(root->left,key);
}
else if (key>root->data){
    root->right=insert(root->right,key);
}

    return root;

}

int search(node*root,int val){
    if(root==nullptr){
        return 0;
    }
   else if(val==root->data){
        return 1;
    }

else if(val<root->data){
   return search(root->left,val);
}
else {
 return   search(root->right,val);
}


}
int main (){
    int n;
    cout<<"Enter the total no of nodes: ";
    cin>>n;
    int*arr=new int[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    cout<<endl;
     node*root=nullptr;
    for(int i=0;i<n;i++){
        root=insert(root,arr[i]);
    }
    inorder(root);
    int ans=search(root,3);
    if(ans==1){
        cout<<"found"<<endl;
    }
    else{
        cout<<"not found";
    }

}
